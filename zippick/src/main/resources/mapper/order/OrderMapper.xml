<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zippick.domain.order.mapper.OrderMapper" >

  <insert id="insertOrder">
    INSERT INTO ORDERS (ID, MERCHANT_ORDER_ID, STATUS, TOTAL_PRICE, COUNT,
                        CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY, MEMBER_ID, PRODUCT_ID)
    VALUES (
              SEQ_ORDERS.NEXTVAL, #{merchantOrderId}, #{status}, #{totalPrice}, #{count},
              SYSDATE, #{memberId}, null, null, #{memberId}, #{productId}
           )
  </insert>
    <select id="getOrderHistoriesByMemberId" resultType="zippick.domain.order.dto.response.OrderHistoryResponse">
        SELECT
            o.created_at AS createdAt,
            o.merchant_order_id AS merchantOrderId,
            o.status AS status,
            p.name AS productName,
            pi.image_url AS productImageUrl
        FROM orders o
                 JOIN product p ON o.product_id = p.id
                 LEFT JOIN (
            SELECT product_id, image_url
            FROM (
                     SELECT product_id, image_url,
                            ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY image_order ASC) AS rn
                     FROM product_image
                 ) WHERE rn = 1
        ) pi ON pi.product_id = p.id
        WHERE o.MEMBER_ID = #{memberId}
        ORDER BY o.created_at DESC
    </select>

    <update id="updateOrderStatusToCanceled">
      UPDATE orders
      SET status = 'CANCELED'
      WHERE ID = #{orderId}
    </update>

    <select id="getOrderDetailById" resultType="zippick.domain.order.dto.response.OrderDetailResponse">
      select
        M.NAME as MEMBER_NAME
        , M.BASIC_ADDRESS
        , M.DETAIL_ADDRESS
        , P.ID as PRODUCT_ID
        , P.THUMBNAIL_IMAGE_URL as productImageUrl
        , P.NAME as PRODUCT_NAME
        , P.PRICE
        , O.CREATED_AT
        , O.ID as ORDER_ID
        , O.MERCHANT_ORDER_ID
        , O.COUNT
        , O.TOTAL_PRICE
        , O.STATUS
      from ORDERS O
      join MEMBER M on O.MEMBER_ID = M.ID
      join PRODUCT P on O.PRODUCT_ID = P.ID
      join PRODUCT_IMAGE PI on P.ID = PI.PRODUCT_ID
      where O.ID = #{orderId}
    </select>
</mapper>
