name: Backend CI/CD

on:
  workflow_dispatch:

#on:
#  pull_request:
#    branches: [main]
#  push:
#    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
        working-directory: zippick

      - run: ./gradlew check -x test
        working-directory: zippick

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
        working-directory: zippick

      - name: Build app
        run: ./gradlew clean build -x test
        working-directory: zippick

      - name: Docker login to ghcr.io
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: Build Docker image
        working-directory: zippick
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}/spring-backend:latest \
            .

      - name: Push to ghcr.io
        run: docker push ghcr.io/${{ github.repository }}/spring-backend:latest
        working-directory: zippick

      - name: SSH Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ secrets.GHCR_USER }} -p ${{ secrets.GHCR_PAT }}
            docker pull ghcr.io/${{ github.repository }}/spring-backend:latest
            docker stop spring || true && docker rm spring || true
            docker run -d --name spring -p 8080:8080 \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e TNS_ADMIN=${{ secrets.TNS_ADMIN }} \
              -e BUCKET_NAME=${{ secrets.BUCKET_NAME }} \
              -e REPLICATE_SECRET=${{ secrets.REPLICATE_SECRET }} \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              -e FIREBASE_CREDENTIAL_PATH=${{ secrets.FIREBASE_CREDENTIAL_PATH }} \
              -v /home/ec2-user/firebase-adminsdk.json:${{ secrets.FIREBASE_CREDENTIAL_PATH }}:ro \
              -v /home/ec2-user/wallet_zippick:/wallet_zippick:ro \
              -v /home/ec2-user/.aws:/root/.aws:ro \
              ghcr.io/${{ github.repository }}/spring-backend:latest
